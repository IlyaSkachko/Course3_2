CREATE OR REPLACE PROCEDURE CREATE_TEST_RUN (
  TEST_CASE_ID IN INTEGER,
  TEST_SUITE_ID IN INTEGER,
  DATE_START IN DATE,
  DATE_END IN DATE,
  RESULT IN VARCHAR2,
  DEFECT_ID IN INTEGER,
  USER_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_RUNS (ID, TEST_CASE_ID, TEST_SUITE_ID, DATE_START, DATE_END, RESULT, DEFECT_ID, USER_ID)
    VALUES (test_runs_sequence.NEXTVAL, TEST_CASE_ID, TEST_SUITE_ID, DATE_START, DATE_END, RESULT, DEFECT_ID, USER_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_RUN');
  END;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_TEST_CASE (
  ID IN NUMBER,
  TITLE IN VARCHAR2,
  DESCRIPTION IN VARCHAR2,
  PRIORITY IN NUMBER
) AS
BEGIN
  BEGIN
    UPDATE TEST_CASES SET TITLE = TITLE, DESCRIPTION = DESCRIPTION, PRIORITY = PRIORITY WHERE ID = ID;
  EXCEPTION
    WHEN OTHERS THEN
      HANDLE_ERROR('TEST_CASE');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_USER (
  NAME IN VARCHAR2,
  PASSWORD IN VARCHAR2,
  ROLE IN VARCHAR2,
  EMAIL IN VARCHAR2
) AS
BEGIN
  BEGIN
    INSERT INTO USERS (ID, NAME, PASSWORD, ROLE, EMAIL)
    VALUES (users_sequence.NEXTVAL, NAME, PASSWORD, ROLE, EMAIL); COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('USERS');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_TEST_CASES (
  TITLE IN VARCHAR2,
  DESCRIPTION IN VARCHAR2,
  EXPECTED_RESULT IN VARCHAR2,
  PRIORITY IN INTEGER,
  USER_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_CASES (ID, TITLE, DESCRIPTION, EXPECTED_RESULT, PRIORITY, USER_ID)
    VALUES (test_cases_sequence.NEXTVAL, TITLE, DESCRIPTION, EXPECTED_RESULT, PRIORITY, USER_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_CASE');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_STEPS (
  STEP IN VARCHAR2,
  TEST_CASE_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO STEPS (ID, STEP, TEST_CASE_ID)
    VALUES (steps_sequence.NEXTVAL, STEP, TEST_CASE_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('STEPS');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_TEST_CASE_STATUSES (
  STATUS IN VARCHAR2,
  DATE_SET IN DATE,
  TEST_CASE_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_CASE_STATUSES (ID, STATUS, DATE_SET, TEST_CASE_ID)
    VALUES (test_case_statuses_sequence.NEXTVAL, STATUS, DATE_SET, TEST_CASE_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_CASE_STATUSES');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_TEST_SUITES (
  TITLE IN VARCHAR2,
  DESCRIPTION IN VARCHAR2
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_SUITES (ID, TITLE, DESCRIPTION)
    VALUES (test_suites_sequence.NEXTVAL, TITLE, DESCRIPTION);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_SUITES');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_APPS (
  DATE_CREATION IN DATE,
  NAME IN VARCHAR2,
  TEST_SUITE_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO APPS (ID, DATE_CREATION, NAME, TEST_SUITE_ID)
    VALUES (apps_sequence.NEXTVAL, DATE_CREATION, NAME, TEST_SUITE_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('APPS');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_DEFECTS (
  DESCRIPTION IN VARCHAR2,
  SEVERITY IN INTEGER,
  PRIORITY IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO DEFECTS (ID, DESCRIPTION, SEVERITY, PRIORITY)
    VALUES (defects_sequence.NEXTVAL, DESCRIPTION, SEVERITY, PRIORITY);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('DEFECTS');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_DEFECT_STATUSES (
  STATUS IN VARCHAR2,
  DATE_SET IN DATE,
  DEFECT_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO DEFECT_STATUSES (ID, STATUS, DATE_SET, DEFECT_ID)
    VALUES (defect_statuses_sequence.NEXTVAL, STATUS, DATE_SET, DEFECT_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('DEFECT_STATUSES');
  END;
END;
/

CREATE OR REPLACE PROCEDURE HANDLE_ERROR (
  TABLE_NAME IN VARCHAR2
) AS
  ErrorMessage VARCHAR2(2000);
  ErrorSeverity NUMBER;
  ErrorState NUMBER;
BEGIN
  ErrorMessage := '????????? ?????? ??? ???????? ?????? ? ??????? '??? ?????????? ?????????, ?????????????? ??? Oracle:

```sql
CREATE OR REPLACE PROCEDURE CREATE_TEST_RUN (
  TEST_CASE_ID IN INTEGER,
  TEST_SUITE_ID IN INTEGER,
  DATE_START IN DATE,
  DATE_END IN DATE,
  RESULT IN VARCHAR2,
  DEFECT_ID IN INTEGER,
  USER_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_RUNS (TEST_CASE_ID, TEST_SUITE_ID, DATE_START, DATE_END, RESULT, DEFECT_ID, USER_ID)
    VALUES (TEST_CASE_ID, TEST_SUITE_ID, DATE_START, DATE_END, RESULT, DEFECT_ID, USER_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_RUN');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_USER (
  NAME IN VARCHAR2,
  PASSWORD IN VARCHAR2,
  ROLE IN VARCHAR2,
  EMAIL IN VARCHAR2
) AS
BEGIN
  BEGIN
    INSERT INTO USERS (NAME, PASSWORD, ROLE, EMAIL)
    VALUES (NAME, PASSWORD, ROLE, EMAIL);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('USERS');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_TEST_CASES (
  TITLE IN VARCHAR2,
  DESCRIPTION IN VARCHAR2,
  EXPECTED_RESULT IN VARCHAR2,
  PRIORITY IN INTEGER,
  USER_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_CASES (TITLE, DESCRIPTION, EXPECTED_RESULT, PRIORITY, USER_ID)
    VALUES (TITLE, DESCRIPTION, EXPECTED_RESULT, PRIORITY, USER_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_CASE');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_STEPS (
  STEP IN VARCHAR2,
  TEST_CASE_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO STEPS (STEP, TEST_CASE_ID)
    VALUES (STEP, TEST_CASE_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('STEPS');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_TEST_CASE_STATUSES (
  STATUS IN VARCHAR2,
  DATE_SET IN DATE,
  TEST_CASE_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_CASE_STATUSES (STATUS, DATE_SET, TEST_CASE_ID)
    VALUES (STATUS, DATE_SET, TEST_CASE_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_CASE_STATUSES');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_TEST_SUITES (
  TITLE IN VARCHAR2,
  DESCRIPTION IN VARCHAR2
) AS
BEGIN
  BEGIN
    INSERT INTO TEST_SUITES (TITLE, DESCRIPTION)
    VALUES (TITLE, DESCRIPTION);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('TEST_SUITES');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_APPS (
  DATE_CREATION IN DATE,
  NAME IN VARCHAR2,
  TEST_SUITE_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO APPS (DATE_CREATION, NAME, TEST_SUITE_ID)
    VALUES (DATE_CREATION, NAME, TEST_SUITE_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('APPS');
  END;
END;


CREATE OR REPLACE PROCEDURE CREATE_DEFECTS (
  DESCRIPTION IN VARCHAR2,
  SEVERITY IN INTEGER,
  PRIORITY IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO DEFECTS (DESCRIPTION, SEVERITY, PRIORITY)
    VALUES (DESCRIPTION, SEVERITY, PRIORITY);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('DEFECTS');
  END;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_DEFECT_STATUSES (
  STATUS IN VARCHAR2,
  DATE_SET IN DATE,
  DEFECT_ID IN INTEGER
) AS
BEGIN
  BEGIN
    INSERT INTO DEFECT_STATUSES (STATUS, DATE_SET, DEFECT_ID)
    VALUES (STATUS, DATE_SET, DEFECT_ID);
  EXCEPTION
    WHEN OTHERS THEN
      EXECUTE HANDLE_ERROR('DEFECT_STATUSES');
  END;
END;
/

CREATE OR REPLACE PROCEDURE HANDLE_ERROR (
  TABLE_NAME IN VARCHAR2
) AS
  ErrorMessage VARCHAR2(2000);
  ErrorSeverity NUMBER;
  ErrorState NUMBER;
BEGIN
  ErrorMessage := '????????? ?????? ??? ???????? ?????? ? ??????? ' || TABLE_NAME || '.';
  ErrorSeverity := SQLCODE;
  ErrorState := 0;

  DBMS_OUTPUT.PUT_LINE('????????? ?? ??????: ' || SQLERRM(SQLCODE));
  DBMS_OUTPUT.PUT_LINE('??????? ??????: ' || ErrorSeverity);
  DBMS_OUTPUT.PUT_LINE('????????? ??????: ' || ErrorState);

  RAISE_APPLICATION_ERROR(-20001, ErrorMessage);
END;
/