
CREATE TABLE USERS (
	ID INTEGER PRIMARY KEY IDENTITY,
	NAME VARCHAR(100) NOT NULL CHECK(NAME NOT LIKE '%[^a-zA-Z]%'),
	ROLE VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL CHECK (EMAIL LIKE '%@%.%')
);

CREATE TABLE TEST_CASES (
	ID INTEGER PRIMARY KEY IDENTITY,
	TITLE VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(250) NOT NULL,
	EXPECTED_RESULT VARCHAR(100) NOT NULL,
	PRIORITY INTEGER NOT NULL CHECK(PRIORITY >=1 AND PRIORITY <= 10),
	USER_ID INTEGER NOT NULL REFERENCES USERS(ID)
);

CREATE TABLE STEPS (
	ID INTEGER PRIMARY KEY IDENTITY,
	STEP VARCHAR(100) NOT NULL,
	TEST_CASE_ID INTEGER NOT NULL REFERENCES TEST_CASES(ID)
);

CREATE TABLE TEST_CASE_STATUSES (
	ID INTEGER PRIMARY KEY IDENTITY,
	STATUS VARCHAR(100) NOT NULL,
	DATE_SET DATE NOT NULL CHECK (DATE_SET >= getdate()),
	TEST_CASE_ID INTEGER NOT NULL REFERENCES TEST_CASES(ID)
);

CREATE TABLE TEST_SUITES (
	ID INTEGER PRIMARY KEY IDENTITY,
	TITLE VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(250) NOT NULL
);

CREATE TABLE APPS (
	ID INTEGER PRIMARY KEY IDENTITY,
	DATE_CREATION DATE NOT NULL CHECK (DATE_CREATION >= getdate()),
	NANE VARCHAR(100) NOT NULL,
	TEST_SUITE_ID INTEGER NOT NULL REFERENCES TEST_SUITES(ID)
);

CREATE TABLE DEFECTS (
	ID INTEGER PRIMARY KEY IDENTITY,
	DESCRIPTION VARCHAR(250) NOT NULL,
	SEVERITY INTEGER NOT NULL CHECK(SEVERITY >=1 AND SEVERITY <= 10),
	PRIORITY INTEGER NOT NULL CHECK(PRIORITY >=1 AND PRIORITY <= 10)
);

CREATE TABLE DEFECT_STATUSES (
	ID INTEGER PRIMARY KEY IDENTITY,
	STATUS VARCHAR(100) NOT NULL,
	DATE_SET DATE NOT NULL CHECK (DATE_SET >= getdate()),
	DEFECT_ID INTEGER NOT NULL REFERENCES DEFECTS(ID)
);

CREATE TABLE TEST_RUNS (
	ID INTEGER PRIMARY KEY IDENTITY,
	TEST_SUITE_ID INTEGER NOT NULL REFERENCES TEST_SUITES(ID),
	TEST_CASE_ID INTEGER NOT NULL REFERENCES TEST_CASES(ID),
	DATE_START DATE NOT NULL,
	DATE_END DATE NOT NULL,
	RESULT VARCHAR(100) NOT NULL,
	DEFECT_ID INTEGER NOT NULL REFERENCES DEFECTS(ID),
	USER_ID INTEGER NOT NULL REFERENCES USERS(ID)
);

