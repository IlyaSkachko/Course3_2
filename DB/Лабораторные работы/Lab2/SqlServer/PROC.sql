
GO
CREATE PROCEDURE CREATE_TEST_RUN
	@TEST_CASE_ID INTEGER,
	@TEST_SUITE_ID INTEGER,
	@DATE_START DATE,
	@DATE_END DATE,
	@RESULT VARCHAR(100),
	@DEFECT_ID INTEGER,
	@USER_ID INTEGER
AS
BEGIN 
	BEGIN TRY
		INSERT INTO TEST_RUNS(TEST_CASE_ID, TEST_SUITE_ID, DATE_START, DATE_END, RESULT, DEFECT_ID, USER_ID) VALUES (@TEST_CASE_ID, @TEST_SUITE_ID, @DATE_START, @DATE_END, @RESULT, @DEFECT_ID, @USER_ID);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'TEST_RUN';
	END CATCH;
END

GO 
CREATE PROCEDURE CREATE_USER
	@NAME VARCHAR(100),
	@PASSWORD VARCHAR(100),
	@ROLE VARCHAR(50),
	@EMAIL VARCHAR(100)
AS
BEGIN
	BEGIN TRY
		INSERT INTO USERS(NAME, ROLE, PASSWORD, EMAIL) VALUES (@NAME, @ROLE, @PASSWORD, @EMAIL);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'USERS';
	END CATCH;
END

GO
CREATE PROCEDURE CREATE_TEST_CASES
	@TITLE VARCHAR(100),
	@DESCRIPTION VARCHAR(250),
	@EXPECTED_RESULT VARCHAR(100),
	@PRIORITY INTEGER,
	@USER_ID INTEGER
AS
BEGIN
	BEGIN TRY
		INSERT INTO TEST_CASES(TITLE, DESCRIPTION, EXPECTED_RESULT, PRIORITY, USER_ID) VALUES (@TITLE, @DESCRIPTION, @EXPECTED_RESULT, @PRIORITY, @USER_ID);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'TEST_CASE';
	END CATCH;
END


GO
CREATE PROCEDURE CREATE_STEPS
	@STEP VARCHAR(100),
	@TEST_CASE_ID INTEGER
AS
BEGIN
	BEGIN TRY
		INSERT INTO STEPS(STEP, TEST_CASE_ID) VALUES (@STEP, @TEST_CASE_ID);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'STEPS';
	END CATCH;
END


GO
CREATE PROCEDURE CREATE_TEST_CASE_STATUSES
	@STATUS VARCHAR(100),
	@DATE_SET DATE,
	@TEST_CASE_ID INTEGER
AS
BEGIN
	BEGIN TRY
		INSERT INTO TEST_CASE_STATUSES(STATUS, DATE_SET, TEST_CASE_ID) VALUES (@STATUS, @DATE_SET, @TEST_CASE_ID);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'TEST_CASE_STATUSES';
	END CATCH;
END



GO
CREATE PROCEDURE CREATE_TEST_SUITES
	@TITLE VARCHAR(100),
	@DESCRIPTION VARCHAR(250)
AS
BEGIN
	BEGIN TRY
		INSERT INTO TEST_SUITES(TITLE, DESCRIPTION) VALUES (@TITLE, @DESCRIPTION);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'TEST_SUITES';
	END CATCH;
END


GO
CREATE PROCEDURE CREATE_APPS
	@DATE_CREATION DATE,
	@NAME VARCHAR(100),
	@TEST_SUITE_ID INTEGER
AS
BEGIN
	BEGIN TRY
		INSERT INTO APPS(NAME, DATE_CREATION, TEST_SUITE_ID) VALUES (@DATE_CREATION, @NAME, @TEST_SUITE_ID);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'APPS';
	END CATCH;
END


GO
CREATE PROCEDURE CREATE_DEFECTS
	@DESCRIPTION VARCHAR(250),
	@SEVERITY INTEGER,
	@PRIORITY INTEGER
AS
BEGIN
	BEGIN TRY
		INSERT INTO DEFECTS(DESCRIPTION, SEVERITY, PRIORITY) VALUES (@DESCRIPTION, @SEVERITY, @PRIORITY);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'DEFECTS';
	END CATCH;
END


GO
CREATE PROCEDURE CREATE_DEFECT_STATUSES
	@STATUS VARCHAR(100),
	@DATE_SET DATE,
	@DEFECT_ID INTEGER
AS
BEGIN
	BEGIN TRY
		INSERT INTO DEFECT_STATUSES(STATUS, DATE_SET, DEFECT_ID) VALUES (@STATUS, @DATE_SET, @DEFECT_ID);
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'DEFECT_STATUSES';
	END CATCH;
END

GO
CREATE PROCEDURE HANDLE_ERROR
	@TABLE_NAME VARCHAR(100)
AS
BEGIN
	DECLARE @ErrorMessage NVARCHAR(MAX);
	DECLARE @ErrorSeverity INT;
	DECLARE @ErrorState INT;

	SELECT 
		@ErrorMessage = FORMATMESSAGE('Произошла ошибка при создании записи в таблице %s.', @TABLE_NAME),
		@ErrorSeverity = ERROR_SEVERITY(),
		@ErrorState = ERROR_STATE();

	PRINT 'Сообщение об ошибке: ' + ERROR_MESSAGE();
	PRINT 'Степень ошибки: ' + CAST(@ErrorSeverity AS NVARCHAR(10));
	PRINT 'Состояние ошибки: ' + CAST(@ErrorState AS NVARCHAR(10));
	RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
END



GO
CREATE PROCEDURE UPDATE_TEST_CASE
	@ID INTEGER,
	@TITLE VARCHAR(100),
	@DESCRIPTION VARCHAR(250),
	@PRIORITY INTEGER
AS
BEGIN 
	BEGIN TRY
		UPDATE TEST_CASE SET TITLE = @TITLE, DESCRIPTION = @DESCRIPTION, PRIORITY = @PRIORITY WHERE ID = @ID;
	END TRY
	BEGIN CATCH
		EXEC HANDLE_ERROR 'TEST_CASE';
	END CATCH;
END


--DROP PROCEDURE IF EXISTS CREATE_USER;
--DROP PROCEDURE IF EXISTS CREATE_TEST_CASES;
--DROP PROCEDURE IF EXISTS CREATE_STEPS;
--DROP PROCEDURE IF EXISTS CREATE_TEST_CASE_STATUSES;
--DROP PROCEDURE IF EXISTS CREATE_TEST_SUITES;
--DROP PROCEDURE IF EXISTS CREATE_APPS;
--DROP PROCEDURE IF EXISTS CREATE_DEFECTS;
--DROP PROCEDURE IF EXISTS CREATE_DEFECT_STATUSES;
--DROP PROCEDURE IF EXISTS CREATE_TEST_RUN;
--DROP PROCEDURE IF EXISTS HANDLE_ERROR;
--DROP PROCEDURE IF EXISTS UPDATE_TEST_CASE;
