
GO
CREATE VIEW TEST_DEFECTS_VIEW AS
SELECT 
    D.ID AS DEFECT_ID,
    D.DESCRIPTION AS DEFECT_DESCRIPTION,
    D.SEVERITY AS DEFECT_SEVERITY,
    D.PRIORITY AS DEFECT_PRIORITY,
    DS.STATUS AS DEFECT_STATUS,
    DS.DATE_SET AS STATUS_DATE_SET,
    TR.ID AS TEST_RUN_ID,
    TR.TEST_SUITE_ID,
    TR.TEST_CASE_ID,
    TR.DATE_START AS TEST_RUN_START,
    TR.DATE_END AS TEST_RUN_END,
    TR.RESULT AS TEST_RUN_RESULT,
    TR.USER_ID AS TEST_RUN_USER_ID
FROM 
    DEFECTS D
LEFT JOIN 
    DEFECT_STATUSES DS ON D.ID = DS.DEFECT_ID
LEFT JOIN 
    TEST_RUNS TR ON D.ID = TR.DEFECT_ID
WHERE 
    TR.DEFECT_ID IS NOT NULL;

GO
CREATE VIEW TEST_CASES_STEPS_VIEW AS
SELECT 
    TC.ID AS TEST_CASE_ID,
    TC.TITLE AS TEST_CASE_TITLE,
    TC.DESCRIPTION AS TEST_CASE_DESCRIPTION,
    TC.EXPECTED_RESULT,
    TC.PRIORITY AS TEST_CASE_PRIORITY,
    TC.USER_ID AS TEST_CASE_USER_ID,
    STRING_AGG(S.STEP, ', ') AS STEPS
FROM 
    TEST_CASES TC
LEFT JOIN 
    STEPS S ON TC.ID = S.TEST_CASE_ID
GROUP BY 
    TC.ID, TC.TITLE, TC.DESCRIPTION, TC.EXPECTED_RESULT, TC.PRIORITY, TC.USER_ID;



GO 
CREATE VIEW LATEST_TEST_CASE_STATUSES_VIEW AS
SELECT 
    TC.ID AS TEST_CASE_ID,
    TC.TITLE AS TEST_CASE_TITLE,
    TC.DESCRIPTION AS TEST_CASE_DESCRIPTION,
    TC.EXPECTED_RESULT,
    TC.PRIORITY AS TEST_CASE_PRIORITY,
    TC.USER_ID AS TEST_CASE_USER_ID,
    TCS.STATUS AS LATEST_TEST_CASE_STATUS,
    TCS.DATE_SET AS LATEST_STATUS_DATE_SET
FROM 
    TEST_CASES TC
LEFT JOIN 
    TEST_CASE_STATUSES TCS ON TC.ID = TCS.TEST_CASE_ID
WHERE 
    TCS.DATE_SET = (SELECT MAX(DATE_SET) FROM TEST_CASE_STATUSES WHERE TEST_CASE_ID = TC.ID);
